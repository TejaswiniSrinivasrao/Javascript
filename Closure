What is Closure in Js?

Javacript has Lexical scope.[Top to bottom].
Every new Function creates its own scope.

A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment). 
In other words, a closure gives you access to an outer function's scope from an inner function.
In JavaScript, closures are created every time a function is created, at function creation time.

example:

let x =100;
function logx(){
  console.log(x);
  }
  logx();
  
  example2:
  
  function add(x){
    return function(y){
        return x+y;
        }
      }
      
      const adder = add(10);
      
      console.log(adder(10)); // return 20 as output
      
      Anonymous functions:
      ______________________
      
      const e = 10;
function sum(a) {
  return function (b) {
    return function (c) {
      // outer functions scope
      return function (d) {
        // local scope
        return a + b + c + d + e;
      };
    };
  };
}

console.log(sum(1)(2)(3)(4));

normal Functions:
_________________
const e = 10;
function sum(a) {
  return function sum2(b) {
    return function sum3(c) {
      // outer functions scope
      return function sum4(d) {
        // local scope
        return a + b + c + d + e;
      };
    };
  };
}

const sum2 = sum(1);
const sum3 = sum2(2);
const sum4 = sum3(3);
const result = sum4(4);
console.log(result); // 20
  
